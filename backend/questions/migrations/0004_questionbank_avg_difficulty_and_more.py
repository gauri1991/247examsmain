# Generated by Django 5.2.4 on 2025-08-01 13:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0003_add_enhanced_question_features'),
    ]

    operations = [
        migrations.AddField(
            model_name='questionbank',
            name='avg_difficulty',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict, help_text='Custom fields for specific needs'),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='default_time_per_question',
            field=models.IntegerField(blank=True, help_text='Default time in seconds', null=True),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='difficulty_level',
            field=models.CharField(choices=[('basic', '🟢 Basic'), ('intermediate', '🟡 Intermediate'), ('advanced', '🟠 Advanced'), ('expert', '🔴 Expert'), ('mixed', '🔵 Mixed Level')], default='intermediate', max_length=20),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='exam_type',
            field=models.CharField(blank=True, choices=[('upsc', 'UPSC (Civil Services)'), ('ssc', 'SSC (Staff Selection Commission)'), ('banking', 'Banking Exams (SBI, IBPS, RBI)'), ('railway', 'Railway Exams (RRB)'), ('defense', 'Defense Exams (NDA, CDS, AFCAT)'), ('state_psc', 'State PSC'), ('teaching', 'Teaching Exams (CTET, TET, NET)'), ('engineering', 'Engineering Entrance (JEE, GATE)'), ('medical', 'Medical Entrance (NEET, AIIMS)'), ('management', 'Management Entrance (CAT, MAT, XAT)'), ('law', 'Law Entrance (CLAT, LSAT)'), ('judiciary', 'Judicial Services'), ('police', 'Police & Para-military'), ('insurance', 'Insurance Exams (LIC, GIC)'), ('academic', 'Academic/School Level'), ('other', 'Other')], max_length=50),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured question banks appear first'),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='language',
            field=models.CharField(default='english', help_text='Primary language', max_length=50),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='organization',
            field=models.CharField(blank=True, help_text='Conducting organization (e.g., UPSC, SSC)', max_length=200),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='question_types_included',
            field=models.JSONField(blank=True, default=list, help_text='Types of questions in this bank'),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='state_specific',
            field=models.CharField(blank=True, help_text='State-specific content (if any)', max_length=100),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='subject',
            field=models.CharField(blank=True, help_text='Specific subject', max_length=100),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='subtopic',
            field=models.CharField(blank=True, help_text='Subtopic', max_length=100),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='target_audience',
            field=models.CharField(choices=[('beginners', 'Beginners'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('competitive_exam', 'Competitive Exam Aspirants'), ('school_students', 'School Students'), ('college_students', 'College Students'), ('professionals', 'Working Professionals'), ('general', 'General Audience')], default='general', max_length=50),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='topic',
            field=models.CharField(blank=True, help_text='Main topic', max_length=100),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='total_questions',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='usage_count',
            field=models.IntegerField(default=0, help_text='Number of times used in tests'),
        ),
        migrations.AddField(
            model_name='questionbank',
            name='year',
            field=models.IntegerField(blank=True, help_text='Year of exam or creation', null=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='difficulty',
            field=models.CharField(choices=[('basic', '🟢 Basic'), ('intermediate', '🟡 Intermediate'), ('advanced', '🟠 Advanced'), ('expert', '🔴 Expert')], default='intermediate', max_length=20),
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('mcq', 'Multiple Choice (Single Answer)'), ('multi_select', 'Multiple Select (Multiple Answers)'), ('true_false', 'True/False'), ('fill_blank', 'Fill in the Blank'), ('essay', 'Essay/Descriptive'), ('statement_reason', 'Statement & Reason'), ('assertion_reason', 'Assertion & Reason'), ('match_following', 'Match the Following'), ('arrangement', 'Arrangement/Sequencing'), ('coding_decoding', 'Coding-Decoding'), ('analogy', 'Analogy'), ('classification', 'Classification/Odd One Out'), ('series_completion', 'Series Completion'), ('direction_sense', 'Direction Sense'), ('blood_relations', 'Blood Relations'), ('ranking_arrangement', 'Ranking & Arrangement'), ('syllogism', 'Syllogism'), ('data_sufficiency', 'Data Sufficiency'), ('reading_comprehension', 'Reading Comprehension'), ('cloze_test', 'Cloze Test'), ('para_jumbles', 'Para Jumbles'), ('error_spotting', 'Error Spotting'), ('sentence_improvement', 'Sentence Improvement'), ('idioms_phrases', 'Idioms & Phrases'), ('synonyms_antonyms', 'Synonyms & Antonyms'), ('one_word_substitution', 'One Word Substitution'), ('mathematical_calculation', 'Mathematical Calculation'), ('data_interpretation', 'Data Interpretation'), ('puzzle', 'Puzzles'), ('seating_arrangement', 'Seating Arrangement'), ('calendar', 'Calendar Problems'), ('clock', 'Clock Problems'), ('number_system', 'Number System'), ('percentage', 'Percentage'), ('profit_loss', 'Profit & Loss'), ('simple_compound_interest', 'Simple & Compound Interest'), ('time_work', 'Time & Work'), ('speed_distance_time', 'Speed, Distance & Time'), ('geometry', 'Geometry'), ('mensuration', 'Mensuration'), ('probability', 'Probability'), ('permutation_combination', 'Permutation & Combination'), ('set_theory', 'Set Theory'), ('venn_diagram', 'Venn Diagram'), ('pie_chart', 'Pie Chart'), ('bar_graph', 'Bar Graph'), ('line_graph', 'Line Graph'), ('table_chart', 'Table Chart'), ('case_study', 'Case Study'), ('situation_based', 'Situation Based'), ('current_affairs', 'Current Affairs'), ('static_gk', 'Static General Knowledge'), ('other', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='questionbank',
            name='category',
            field=models.CharField(blank=True, choices=[('mathematics', '📊 Mathematics'), ('physics', '⚡ Physics'), ('chemistry', '🧪 Chemistry'), ('biology', '🧬 Biology'), ('english', '📚 English Language'), ('hindi', '🇮🇳 Hindi'), ('history', '🏛️ History'), ('geography', '🌍 Geography'), ('economics', '💰 Economics'), ('political_science', '🏛️ Political Science'), ('sociology', '👥 Sociology'), ('psychology', '🧠 Psychology'), ('philosophy', '🤔 Philosophy'), ('computer_science', '💻 Computer Science'), ('engineering', '⚙️ Engineering'), ('medical', '🏥 Medical'), ('law', '⚖️ Law'), ('commerce', '📈 Commerce'), ('accountancy', '📋 Accountancy'), ('business_studies', '💼 Business Studies'), ('general_knowledge', '🎯 General Knowledge'), ('current_affairs', '📰 Current Affairs'), ('reasoning', '🧩 Logical Reasoning'), ('quantitative_aptitude', '🔢 Quantitative Aptitude'), ('data_interpretation', '📊 Data Interpretation'), ('english_comprehension', '📖 English Comprehension'), ('general_science', '🔬 General Science'), ('indian_polity', '🏛️ Indian Polity'), ('indian_economy', '💹 Indian Economy'), ('indian_geography', '🗺️ Indian Geography'), ('indian_history', '📜 Indian History'), ('environment_ecology', '🌱 Environment & Ecology'), ('sanskrit', '📿 Sanskrit'), ('literature', '📚 Literature'), ('linguistics', '🗣️ Linguistics'), ('statistics', '📈 Statistics'), ('agriculture', '🌾 Agriculture'), ('home_science', '🏠 Home Science'), ('physical_education', '🏃 Physical Education'), ('fine_arts', '🎨 Fine Arts'), ('music', '🎵 Music'), ('other', '📋 Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='questionbank',
            name='default_difficulty',
            field=models.CharField(choices=[('basic', '🟢 Basic'), ('intermediate', '🟡 Intermediate'), ('advanced', '🟠 Advanced'), ('expert', '🔴 Expert'), ('mixed', '🔵 Mixed Level')], default='intermediate', max_length=20),
        ),
    ]
