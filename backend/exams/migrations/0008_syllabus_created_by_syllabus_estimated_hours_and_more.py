# Generated by Django 5.2.4 on 2025-08-19 13:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0007_add_question_selection_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='syllabus',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_syllabi', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='estimated_hours',
            field=models.IntegerField(default=0, help_text='Total estimated study hours'),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='total_topics',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='version',
            field=models.CharField(default='1.0', max_length=20),
        ),
        migrations.CreateModel(
            name='SyllabusNode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('node_type', models.CharField(choices=[('unit', 'Unit'), ('chapter', 'Chapter'), ('topic', 'Topic'), ('subtopic', 'Subtopic'), ('concept', 'Concept')], default='topic', max_length=20)),
                ('order', models.IntegerField(default=0, help_text='Order within parent level')),
                ('depth_level', models.IntegerField(default=0, help_text='0 for root, increments for children')),
                ('estimated_hours', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], default='medium', max_length=10)),
                ('weightage', models.DecimalField(decimal_places=2, default=0, help_text='Weightage in exam (percentage)', max_digits=5)),
                ('is_optional', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('reference_materials', models.JSONField(blank=True, default=list, help_text='List of reference links/books')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='exams.syllabusnode')),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='exams.syllabus')),
            ],
            options={
                'db_table': 'syllabus_nodes',
                'ordering': ['depth_level', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='StudentSyllabusProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('revision', 'Revision'), ('skipped', 'Skipped')], default='not_started', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('confidence_level', models.IntegerField(choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], default=3)),
                ('study_hours', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('revision_count', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('bookmarks', models.JSONField(blank=True, default=list, help_text='Personal bookmarks/resources')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_revised_at', models.DateTimeField(blank=True, null=True)),
                ('test_ready', models.BooleanField(default=False, help_text='Ready to take test on this topic')),
                ('test_scores', models.JSONField(blank=True, default=list, help_text='List of test scores for this topic')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus_progress', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='exams.syllabusnode')),
            ],
            options={
                'db_table': 'student_syllabus_progress',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddIndex(
            model_name='syllabusnode',
            index=models.Index(fields=['syllabus', 'parent', 'order'], name='syllabus_no_syllabu_e1c935_idx'),
        ),
        migrations.AddIndex(
            model_name='syllabusnode',
            index=models.Index(fields=['syllabus', 'depth_level'], name='syllabus_no_syllabu_f8b8cb_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsyllabusprogress',
            index=models.Index(fields=['student', 'status'], name='student_syl_student_672eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsyllabusprogress',
            index=models.Index(fields=['student', 'node', 'status'], name='student_syl_student_9ec1d1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsyllabusprogress',
            unique_together={('student', 'node')},
        ),
    ]
