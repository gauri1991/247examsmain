# Generated by Django 5.2.4 on 2025-08-01 12:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0004_add_attempt_number_field'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='exam',
            name='year',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ExamMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_date', models.DateField(blank=True, null=True)),
                ('form_start_date', models.DateTimeField(blank=True, null=True)),
                ('form_end_date', models.DateTimeField(blank=True, null=True)),
                ('form_extended_date', models.DateTimeField(blank=True, null=True)),
                ('fee_payment_last_date', models.DateTimeField(blank=True, null=True)),
                ('correction_window_start', models.DateTimeField(blank=True, null=True)),
                ('correction_window_end', models.DateTimeField(blank=True, null=True)),
                ('admit_card_date', models.DateField(blank=True, null=True)),
                ('exam_start_date', models.DateField(blank=True, null=True)),
                ('exam_end_date', models.DateField(blank=True, null=True)),
                ('result_date', models.DateField(blank=True, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('eligibility_criteria', models.TextField(blank=True)),
                ('fee_structure', models.JSONField(blank=True, default=dict)),
                ('official_notification_url', models.URLField(blank=True)),
                ('syllabus_url', models.URLField(blank=True)),
                ('apply_online_url', models.URLField(blank=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='exams.exam')),
            ],
            options={
                'db_table': 'exam_metadata',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('short_name', models.CharField(blank=True, max_length=50)),
                ('organization_type', models.CharField(choices=[('government', 'Government'), ('private', 'Private'), ('university', 'University'), ('board', 'Education Board'), ('psu', 'Public Sector Undertaking'), ('other', 'Other')], default='government', max_length=20)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organization_logos/')),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organizations',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='exams.organization'),
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='syllabus_pdfs/')),
                ('total_marks', models.IntegerField(blank=True, null=True)),
                ('exam_pattern', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='exams.exam')),
            ],
            options={
                'verbose_name_plural': 'Syllabi',
                'db_table': 'syllabi',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('weightage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('topics', models.JSONField(blank=True, default=list)),
                ('order', models.IntegerField(default=0)),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='exams.syllabus')),
            ],
            options={
                'db_table': 'subjects',
                'ordering': ['order', 'name'],
            },
        ),
    ]
