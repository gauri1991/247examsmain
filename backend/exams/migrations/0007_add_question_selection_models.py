# Generated by Django 5.2.4 on 2025-08-05 16:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0006_add_enhanced_exam_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SelectionRuleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('selection_mode', models.CharField(choices=[('random', 'Random Selection'), ('rule_based', 'Rule-Based Selection'), ('manual', 'Manual Selection'), ('hybrid', 'Hybrid Selection')], default='random', max_length=20)),
                ('total_questions', models.IntegerField(default=50)),
                ('difficulty_distribution', models.JSONField(default=dict)),
                ('category_distribution', models.JSONField(default=dict)),
                ('question_type_distribution', models.JSONField(default=dict)),
                ('year_range', models.JSONField(default=dict)),
                ('included_topics', models.JSONField(default=list)),
                ('excluded_topics', models.JSONField(default=list)),
                ('ensure_topic_coverage', models.BooleanField(default=True)),
                ('avoid_duplicates_from_attempts', models.BooleanField(default=True)),
                ('priority_new_questions', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selection_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'selection_rule_templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestSelectionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection_mode', models.CharField(choices=[('random', 'Random Selection'), ('rule_based', 'Rule-Based Selection'), ('manual', 'Manual Selection'), ('hybrid', 'Hybrid Selection')], default='random', max_length=20)),
                ('total_questions', models.IntegerField(default=50)),
                ('difficulty_distribution', models.JSONField(default=dict, help_text='{"basic": 30, "intermediate": 50, "advanced": 20}')),
                ('category_distribution', models.JSONField(default=dict, help_text='{"mathematics": 25, "physics": 25, ...}')),
                ('question_type_distribution', models.JSONField(default=dict, help_text='{"mcq": 70, "essay": 30}')),
                ('year_range', models.JSONField(default=dict, help_text='{"start": 2020, "end": 2024}')),
                ('included_topics', models.JSONField(default=list)),
                ('excluded_topics', models.JSONField(default=list)),
                ('included_banks', models.JSONField(default=list, help_text='List of question bank IDs')),
                ('excluded_questions', models.JSONField(default=list, help_text='Already used question IDs')),
                ('ensure_topic_coverage', models.BooleanField(default=True)),
                ('avoid_duplicates_from_attempts', models.BooleanField(default=True)),
                ('priority_new_questions', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='selection_rule', to='exams.test')),
            ],
            options={
                'db_table': 'test_selection_rules',
            },
        ),
    ]
