# Generated by Django 5.2.4 on 2025-08-01 14:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0005_exam_year_exammetadata_organization_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='exam',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict, help_text='Custom fields for specific needs'),
        ),
        migrations.AddField(
            model_name='exam',
            name='difficulty_level',
            field=models.CharField(choices=[('basic', '🟢 Basic'), ('intermediate', '🟡 Intermediate'), ('advanced', '🟠 Advanced'), ('expert', '🔴 Expert'), ('mixed', '🔵 Mixed Level')], default='intermediate', max_length=20),
        ),
        migrations.AddField(
            model_name='exam',
            name='exam_type',
            field=models.CharField(blank=True, choices=[('upsc', 'UPSC (Civil Services)'), ('ssc', 'SSC (Staff Selection Commission)'), ('banking', 'Banking Exams (SBI, IBPS, RBI)'), ('railway', 'Railway Exams (RRB)'), ('defense', 'Defense Exams (NDA, CDS, AFCAT)'), ('state_psc', 'State PSC'), ('teaching', 'Teaching Exams (CTET, TET, NET)'), ('engineering', 'Engineering Entrance (JEE, GATE)'), ('medical', 'Medical Entrance (NEET, AIIMS)'), ('management', 'Management Entrance (CAT, MAT, XAT)'), ('law', 'Law Entrance (CLAT, LSAT)'), ('judiciary', 'Judicial Services'), ('police', 'Police & Para-military'), ('insurance', 'Insurance Exams (LIC, GIC)'), ('academic', 'Academic/School Level'), ('other', 'Other')], max_length=50),
        ),
        migrations.AddField(
            model_name='exam',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured exams appear first'),
        ),
        migrations.AddField(
            model_name='exam',
            name='language',
            field=models.CharField(default='english', help_text='Primary language', max_length=50),
        ),
        migrations.AddField(
            model_name='exam',
            name='state_specific',
            field=models.CharField(blank=True, help_text='State-specific content (if any)', max_length=100),
        ),
        migrations.AddField(
            model_name='exam',
            name='subject',
            field=models.CharField(blank=True, help_text='Specific subject', max_length=100),
        ),
        migrations.AddField(
            model_name='exam',
            name='subtopic',
            field=models.CharField(blank=True, help_text='Subtopic', max_length=100),
        ),
        migrations.AddField(
            model_name='exam',
            name='tags',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='exam',
            name='target_audience',
            field=models.CharField(choices=[('beginners', 'Beginners'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('competitive_exam', 'Competitive Exam Aspirants'), ('school_students', 'School Students'), ('college_students', 'College Students'), ('professionals', 'Working Professionals'), ('general', 'General Audience')], default='general', max_length=50),
        ),
        migrations.AddField(
            model_name='exam',
            name='topic',
            field=models.CharField(blank=True, help_text='Main topic', max_length=100),
        ),
        migrations.AlterField(
            model_name='exam',
            name='category',
            field=models.CharField(blank=True, choices=[('mathematics', '📊 Mathematics'), ('physics', '⚡ Physics'), ('chemistry', '🧪 Chemistry'), ('biology', '🧬 Biology'), ('english', '📚 English Language'), ('hindi', '🇮🇳 Hindi'), ('history', '🏛️ History'), ('geography', '🌍 Geography'), ('economics', '💰 Economics'), ('political_science', '🏛️ Political Science'), ('sociology', '👥 Sociology'), ('psychology', '🧠 Psychology'), ('philosophy', '🤔 Philosophy'), ('computer_science', '💻 Computer Science'), ('engineering', '⚙️ Engineering'), ('medical', '🏥 Medical'), ('law', '⚖️ Law'), ('commerce', '📈 Commerce'), ('accountancy', '📋 Accountancy'), ('business_studies', '💼 Business Studies'), ('general_knowledge', '🎯 General Knowledge'), ('current_affairs', '📰 Current Affairs'), ('reasoning', '🧩 Logical Reasoning'), ('quantitative_aptitude', '🔢 Quantitative Aptitude'), ('data_interpretation', '📊 Data Interpretation'), ('english_comprehension', '📖 English Comprehension'), ('general_science', '🔬 General Science'), ('indian_polity', '🏛️ Indian Polity'), ('indian_economy', '💹 Indian Economy'), ('indian_geography', '🗺️ Indian Geography'), ('indian_history', '📜 Indian History'), ('environment_ecology', '🌱 Environment & Ecology'), ('sanskrit', '📿 Sanskrit'), ('literature', '📚 Literature'), ('linguistics', '🗣️ Linguistics'), ('statistics', '📈 Statistics'), ('agriculture', '🌾 Agriculture'), ('home_science', '🏠 Home Science'), ('physical_education', '🏃 Physical Education'), ('fine_arts', '🎨 Fine Arts'), ('music', '🎵 Music'), ('other', '📋 Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='exam',
            name='year',
            field=models.IntegerField(blank=True, help_text='Year of exam or creation', null=True),
        ),
    ]
