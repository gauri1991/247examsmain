# Generated by Django 5.2.4 on 2025-08-19 13:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0008_syllabus_created_by_syllabus_estimated_hours_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('numerical', 'Numerical Answer'), ('short_answer', 'Short Answer'), ('code_completion', 'Code Completion'), ('drag_drop', 'Drag & Drop'), ('formula_input', 'Formula Input')], max_length=20)),
                ('schedule_type', models.CharField(choices=[('immediate', 'Immediate (After Content)'), ('spaced_1d', '1 Day Later'), ('spaced_3d', '3 Days Later'), ('spaced_1w', '1 Week Later'), ('spaced_1m', '1 Month Later')], max_length=20)),
                ('question_text', models.TextField()),
                ('question_data', models.JSONField(default=dict, help_text='Question-specific data (options, correct_answer, etc.)')),
                ('max_points', models.IntegerField(default=1)),
                ('difficulty_weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('total_attempts', models.IntegerField(default=0)),
                ('correct_attempts', models.IntegerField(default=0)),
                ('avg_time_taken', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'assessments',
            },
        ),
        migrations.CreateModel(
            name='AssessmentAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('student_answer', models.JSONField(help_text="Student's answer data")),
                ('is_correct', models.BooleanField()),
                ('points_earned', models.DecimalField(decimal_places=2, max_digits=5)),
                ('time_taken', models.DecimalField(decimal_places=1, help_text='Seconds', max_digits=5)),
                ('scheduled_for', models.DateTimeField(help_text='When this assessment is scheduled')),
                ('next_review_date', models.DateTimeField(blank=True, null=True)),
                ('review_interval', models.IntegerField(default=1, help_text='Days until next review')),
                ('ease_factor', models.DecimalField(decimal_places=2, default=2.5, help_text='Spaced repetition ease', max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exams.assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assessment_attempts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningContent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('basic', 'Basic'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('content_type', models.CharField(choices=[('theory', 'Theory'), ('example', 'Example'), ('exercise', 'Exercise'), ('simulation', 'Interactive Simulation'), ('code', 'Code Playground'), ('assessment', 'Assessment')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(help_text='Rich HTML content with LaTeX support')),
                ('interactive_data', models.JSONField(blank=True, default=dict, help_text='Configuration for interactive elements')),
                ('estimated_read_time', models.IntegerField(default=5, help_text='Minutes to complete')),
                ('order', models.IntegerField(default=0)),
                ('is_ai_generated', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('avg_completion_time', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('difficulty_rating', models.DecimalField(decimal_places=2, default=3.0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_content', to='exams.syllabusnode')),
                ('prerequisites', models.ManyToManyField(blank=True, to='exams.learningcontent')),
            ],
            options={
                'db_table': 'learning_content',
                'ordering': ['level', 'order'],
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_views', models.IntegerField(default=0)),
                ('unique_viewers', models.IntegerField(default=0)),
                ('avg_time_spent', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('avg_understanding_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('avg_difficulty_rating', models.DecimalField(decimal_places=2, default=3.0, max_digits=3)),
                ('improvement_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('bounce_rate', models.DecimalField(decimal_places=2, default=0, help_text='% who leave without interaction', max_digits=5)),
                ('engagement_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='exams.learningcontent')),
            ],
            options={
                'db_table': 'learning_analytics',
            },
        ),
        migrations.CreateModel(
            name='InteractiveElement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('element_type', models.CharField(choices=[('graph', 'Interactive Graph'), ('simulation', 'Physics/Math Simulation'), ('code_editor', 'Code Playground'), ('formula_builder', 'Formula Constructor'), ('drag_drop', 'Drag & Drop Exercise'), ('slider_demo', 'Parameter Slider Demo'), ('animation', 'Step-by-Step Animation'), ('quiz_interactive', 'Interactive Quiz')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('config_data', models.JSONField(default=dict, help_text='Element-specific configuration')),
                ('javascript_code', models.TextField(blank=True, help_text='Custom JavaScript for interactivity')),
                ('python_code', models.TextField(blank=True, help_text='Python code for code playground')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactive_elements', to='exams.learningcontent')),
            ],
            options={
                'db_table': 'interactive_elements',
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='exams.learningcontent'),
        ),
        migrations.CreateModel(
            name='StudentLearningProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('mastered', 'Mastered'), ('needs_review', 'Needs Review')], default='not_started', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('time_spent', models.DecimalField(decimal_places=1, default=0, help_text='Minutes spent', max_digits=6)),
                ('session_count', models.IntegerField(default=0)),
                ('understanding_score', models.DecimalField(decimal_places=2, default=0, help_text='0-100 based on assessments', max_digits=5)),
                ('retention_score', models.DecimalField(decimal_places=2, default=0, help_text='Spaced repetition performance', max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('bookmarks', models.JSONField(blank=True, default=list)),
                ('difficulty_rating', models.IntegerField(blank=True, help_text="Student's difficulty rating 1-5", null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='exams.learningcontent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_learning_progress',
            },
        ),
        migrations.AddIndex(
            model_name='learningcontent',
            index=models.Index(fields=['node', 'level', 'order'], name='learning_co_node_id_b11579_idx'),
        ),
        migrations.AddIndex(
            model_name='learningcontent',
            index=models.Index(fields=['content_type', 'is_approved'], name='learning_co_content_56bcae_idx'),
        ),
        migrations.AddIndex(
            model_name='studentlearningprogress',
            index=models.Index(fields=['student', 'status'], name='student_lea_student_1884e9_idx'),
        ),
        migrations.AddIndex(
            model_name='studentlearningprogress',
            index=models.Index(fields=['content', 'status'], name='student_lea_content_5338f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentlearningprogress',
            unique_together={('student', 'content')},
        ),
    ]
